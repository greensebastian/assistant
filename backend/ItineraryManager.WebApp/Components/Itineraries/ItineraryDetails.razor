@using ItineraryManager.Domain.Itineraries
@using Newtonsoft.Json
@inject ItineraryService ItineraryService;
@inject ISnackbar Snackbar;

<MudItem xs="12">
    <h1>@Itinerary.Name</h1>
    
    <pre>@JsonConvert.SerializeObject(Itinerary, Formatting.Indented)</pre>
    <pre>@JsonConvert.SerializeObject(SuggestedChanges, Formatting.Indented)</pre>

    <MudForm Spacing="2" @ref="@Form" Model="@Model">
        <MudTextField @bind-Value="Model.SuggestionPrompt" For="@(() => Model.SuggestionPrompt)"/>
    </MudForm>

    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(async () => await SuggestChanges())">Suggest changes</MudButton>
    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(async () => await ApplyChanges())">Apply changes</MudButton>
</MudItem>

@code {
    [Parameter]
    public required Itinerary Itinerary { get; set; }

    private List<IItineraryChange> SuggestedChanges { get; set; } = new();

    private MudForm Form { get; set; } = new();

    private ChangeItineraryFormModel Model { get; } = new();

    public class ChangeItineraryFormModel
    {
        [Label("Suggest change to itinerary")] public string SuggestionPrompt { get; set; } = "";
    }
    
    private async Task SuggestChanges()
    {
        await Form.Validate();

        if (Form.IsValid)
        {
            var result = await ItineraryService.RequestChangeSuggestions(Itinerary.Id, Model.SuggestionPrompt, CancellationToken.None);
            if (result.IsSuccess) SuggestedChanges = result.Value.ToList();
            else Snackbar.Add(string.Join("\n", result.Reasons), Severity.Error);
        }
    }
    
    private async Task ApplyChanges()
    {
        var result = await ItineraryService.ApplyChanges(Itinerary.Id, SuggestedChanges, CancellationToken.None);
        if (result.IsFailed)
        {
            Snackbar.Add(string.Join("\n", result.Reasons), Severity.Error);
        }
        else
        {
            Snackbar.Add("Successfully applied changes!", Severity.Success);
            SuggestedChanges = new();
            Itinerary = result.Value;
        }
    }
}