@page "/Itineraries/{itineraryId:guid}"
@using ItineraryManager.Domain.Itineraries
@using ItineraryManager.WebApp.Components.Itineraries
@inject ItineraryService ItineraryService
@inject ISnackbar Snackbar;

<PageTitle>Itinerary @ItineraryName</PageTitle>

<MudItem xs="12">
@if (Itinerary != null)
{
    <ItineraryDetails Itinerary="Itinerary" />
}
else
{
    <MudProgressCircular/>
}
</MudItem>


@code {
    private Itinerary? Itinerary { get; set; }

    private string ItineraryName => Itinerary is null ? "" : $": {Itinerary.Name}";
    
    [Parameter]
    public required Guid ItineraryId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var itinerary = await ItineraryService.Get(ItineraryId, CancellationToken.None);
        if (itinerary.IsSuccess) Itinerary = itinerary.Value;
        else Snackbar.Add(itinerary.LineSeparatedErrors(), Severity.Error);
    }
}